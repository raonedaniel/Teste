 package Interface;

import classededados.Matriz;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class TelaMatriz extends javax.swing.JFrame {

    //ATRIBUTOS.
    Matriz matA = null;
    Matriz matB = null;
    
    DefaultTableModel model = null;
    
    boolean butaoA = true;
    boolean butaoB = true;
    
    public TelaMatriz() {
        initComponents();
        model = (DefaultTableModel) jTableResultado.getModel();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldAColunas = new javax.swing.JTextField();
        jTextFieldALinhas = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaSaidaMA = new javax.swing.JTextArea();
        jButtonCriarMatrizA = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldBLinhas = new javax.swing.JTextField();
        jTextFieldBColunas = new javax.swing.JTextField();
        jButtonCriarMatrizB = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaSaidaMB = new javax.swing.JTextArea();
        jButtonMultiKB = new javax.swing.JButton();
        jButtonPotenciaB = new javax.swing.JButton();
        jButtonMultiplicacao = new javax.swing.JButton();
        jButtonSubtracao = new javax.swing.JButton();
        jButtonAdicao = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaSaida = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableResultado = new javax.swing.JTable();
        jButtonReset = new javax.swing.JButton();
        jButtonInversaB = new javax.swing.JButton();
        jButtonInversaA = new javax.swing.JButton();
        jButtonPotenciaA = new javax.swing.JButton();
        jButtonMultiKA = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Projeto Matriz");
        setResizable(false);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jLabel2.setText("MATRIZ A");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setText("QUANTIDADE DE LINHAS:");
        jLabel3.setToolTipText("");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setText("QUANTIDADE DE COLUNAS:");

        jTextFieldAColunas.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jTextFieldAColunas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldAColunasKeyTyped(evt);
            }
        });

        jTextFieldALinhas.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jTextFieldALinhas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldALinhasActionPerformed(evt);
            }
        });
        jTextFieldALinhas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldALinhasKeyTyped(evt);
            }
        });

        jTextAreaSaidaMA.setEditable(false);
        jTextAreaSaidaMA.setColumns(20);
        jTextAreaSaidaMA.setRows(5);
        jScrollPane1.setViewportView(jTextAreaSaidaMA);

        jButtonCriarMatrizA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButtonCriarMatrizA.setText("CRIAR MATRIZ A");
        jButtonCriarMatrizA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCriarMatrizAActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jLabel1.setText("MATRIZ B");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel5.setText("QUANTIDADE DE LINHAS:");
        jLabel5.setToolTipText("");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel6.setText("QUANTIDADE DE COLUNAS:");

        jTextFieldBLinhas.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jTextFieldBLinhas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBLinhasKeyTyped(evt);
            }
        });

        jTextFieldBColunas.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jTextFieldBColunas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBColunasKeyTyped(evt);
            }
        });

        jButtonCriarMatrizB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButtonCriarMatrizB.setText("CRIAR MATRIZ B");
        jButtonCriarMatrizB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCriarMatrizBActionPerformed(evt);
            }
        });

        jTextAreaSaidaMB.setEditable(false);
        jTextAreaSaidaMB.setColumns(20);
        jTextAreaSaidaMB.setRows(5);
        jScrollPane2.setViewportView(jTextAreaSaidaMB);

        jButtonMultiKB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButtonMultiKB.setText("\"B\" MULTIPLICAR POR K");
        jButtonMultiKB.setEnabled(false);
        jButtonMultiKB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMultiKBActionPerformed(evt);
            }
        });

        jButtonPotenciaB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButtonPotenciaB.setText("\"B\" POTÊNCIA");
        jButtonPotenciaB.setEnabled(false);
        jButtonPotenciaB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPotenciaBActionPerformed(evt);
            }
        });

        jButtonMultiplicacao.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButtonMultiplicacao.setText("MULTIPLICAÇÃO");
        jButtonMultiplicacao.setEnabled(false);
        jButtonMultiplicacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMultiplicacaoActionPerformed(evt);
            }
        });

        jButtonSubtracao.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButtonSubtracao.setText("SUBTRAÇÃO");
        jButtonSubtracao.setEnabled(false);
        jButtonSubtracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubtracaoActionPerformed(evt);
            }
        });

        jButtonAdicao.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButtonAdicao.setText("ADIÇÃO");
        jButtonAdicao.setEnabled(false);
        jButtonAdicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicaoActionPerformed(evt);
            }
        });

        jTextAreaSaida.setEditable(false);
        jTextAreaSaida.setColumns(20);
        jTextAreaSaida.setRows(5);
        jScrollPane3.setViewportView(jTextAreaSaida);

        jTableResultado.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        jTableResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"TRIANGULAR SUPERIOR", "", ""},
                {"TRIANGULAR INFERIOR", null, null},
                {"SIMETRICA", null, ""},
                {"IDENTIDADE", null, null},
                {"ORTOGONAL", null, null},
                {"PERMUTAÇÃO", null, null},
                {"IGUALDADE", null, null},
                {"DIFERENÇA", null, null}
            },
            new String [] {
                "ITENS", "MATRIZ A", "MATRIZ B"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableResultado.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTableResultado.setAutoscrolls(false);
        jTableResultado.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTableResultado);

        jButtonReset.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButtonReset.setText("RESET");
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        jButtonInversaB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButtonInversaB.setText("\"B\" TRANSPOSTA");
        jButtonInversaB.setEnabled(false);
        jButtonInversaB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInversaBActionPerformed(evt);
            }
        });

        jButtonInversaA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButtonInversaA.setText("\"A\" TRANSPOSTA");
        jButtonInversaA.setEnabled(false);
        jButtonInversaA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInversaAActionPerformed(evt);
            }
        });

        jButtonPotenciaA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButtonPotenciaA.setText("\"A\" POTÊNCIA");
        jButtonPotenciaA.setEnabled(false);
        jButtonPotenciaA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPotenciaAActionPerformed(evt);
            }
        });

        jButtonMultiKA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButtonMultiKA.setText("\"A\" MULTIPLICAR POR K");
        jButtonMultiKA.setEnabled(false);
        jButtonMultiKA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMultiKAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonReset))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextFieldALinhas, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldAColunas, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                        .addComponent(jScrollPane3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jButtonCriarMatrizA)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonMultiKA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(87, 87, 87)
                        .addComponent(jButtonCriarMatrizB)
                        .addGap(53, 53, 53))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonPotenciaB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonMultiplicacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonSubtracao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonAdicao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonMultiKB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonInversaB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonInversaA, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonPotenciaA, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldBLinhas, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldBColunas, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)))
                    .addComponent(jScrollPane4)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextFieldALinhas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldBLinhas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextFieldAColunas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldBColunas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonCriarMatrizA, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonCriarMatrizB, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jButtonMultiKA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPotenciaA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonInversaA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAdicao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSubtracao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonMultiplicacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonInversaB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPotenciaB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonMultiKB)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonReset)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldALinhasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldALinhasKeyTyped
        try {
            int x = Integer.parseInt(String.valueOf(evt.getKeyChar()));
        } catch (Exception e) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldALinhasKeyTyped

    private void jTextFieldAColunasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAColunasKeyTyped
        try {
            int x = Integer.parseInt(String.valueOf(evt.getKeyChar()));
        } catch (Exception e) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldAColunasKeyTyped

    private void jButtonCriarMatrizAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCriarMatrizAActionPerformed
        try {
            if (!(jTextFieldALinhas.getText().equals("") || jTextFieldAColunas.getText().equals(""))) {
                matA = new Matriz(Integer.parseInt(jTextFieldALinhas.getText()), Integer.parseInt(jTextFieldAColunas.getText()));

                for (int linha = 0; linha < matA.getQuantidadeDeLinhas(); linha++) {
                    for (int coluna = 0; coluna < matA.getQuantidadeDeColunas(); coluna++) {
                        String texto = "Matriz A [" + linha + "][" + coluna + "]";
                        matA.setElemento(linha, coluna, (Integer.parseInt(JOptionPane.showInputDialog(rootPane, texto))));
                    }
                }
                jTextAreaSaidaMA.setText("Matriz \"A\"\n" + matA.getMatriz());
                butaoA = false;
                jTextFieldAColunas.setEditable(butaoA);
                jTextFieldALinhas.setEditable(butaoA);
                jButtonCriarMatrizA.setEnabled(butaoA);
                jButtonInversaA.setEnabled(true);
                jButtonMultiKA.setEnabled(true);
                jButtonPotenciaA.setEnabled(true);
                matPrima();
                butao();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Não permitido campos 'vazios'.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Apenas Números permitidos.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_jButtonCriarMatrizAActionPerformed

    private void jTextFieldBLinhasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBLinhasKeyTyped
        try {
            int x = Integer.parseInt(String.valueOf(evt.getKeyChar()));
        } catch (Exception e) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldBLinhasKeyTyped

    private void jTextFieldBColunasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBColunasKeyTyped
        try {
            int x = Integer.parseInt(String.valueOf(evt.getKeyChar()));
        } catch (Exception e) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldBColunasKeyTyped

    private void jButtonCriarMatrizBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCriarMatrizBActionPerformed
        try {
            if (!(jTextFieldBLinhas.getText().equals("") || jTextFieldBColunas.getText().equals(""))) {
                matB = new Matriz(Integer.parseInt(jTextFieldBLinhas.getText()), Integer.parseInt(jTextFieldBColunas.getText()));

                for (int linha = 0; linha < matB.getQuantidadeDeLinhas(); linha++) {
                    for (int coluna = 0; coluna < matB.getQuantidadeDeColunas(); coluna++) {
                        String texto = "Matriz B [" + linha + "][" + coluna + "]";
                        matB.setElemento(linha, coluna, (Integer.parseInt(JOptionPane.showInputDialog(rootPane, texto))));
                    }
                }
                jTextAreaSaidaMB.setText("Matriz \"B\"\n" + matB.getMatriz());
                butaoB = false;
                jTextFieldBColunas.setEditable(butaoB);
                jTextFieldBLinhas.setEditable(butaoB);
                jButtonCriarMatrizB.setEnabled(butaoB);
                jButtonInversaB.setEnabled(true);
                jButtonMultiKB.setEnabled(true);
                jButtonPotenciaB.setEnabled(true);
                matSec();
                butao();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Não permitido campos 'vazios'.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Apenas Números permitidos.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_jButtonCriarMatrizBActionPerformed

    private void jButtonMultiKBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMultiKBActionPerformed
        try {
            multiplicarK(matB);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_jButtonMultiKBActionPerformed

    private void jButtonPotenciaBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPotenciaBActionPerformed
        try {
            potencia(matB);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_jButtonPotenciaBActionPerformed

    private void jButtonMultiplicacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMultiplicacaoActionPerformed
        try {
            multiplicar();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_jButtonMultiplicacaoActionPerformed

    private void jButtonSubtracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubtracaoActionPerformed
        try {
            subtrair();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_jButtonSubtracaoActionPerformed

    private void jButtonAdicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicaoActionPerformed
        try {
            adicionar();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_jButtonAdicaoActionPerformed

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        butaoA = true;
        butaoB = true;
        matA = null;
        matB = null;
        jButtonCriarMatrizA.setEnabled(butaoA);
        jButtonCriarMatrizB.setEnabled(butaoB);
        jTextFieldAColunas.setEditable(butaoA);
        jTextFieldALinhas.setEditable(butaoA);
        jTextFieldBColunas.setEditable(butaoB);
        jTextFieldBLinhas.setEditable(butaoB);
        jTextFieldAColunas.setText(null);
        jTextFieldALinhas.setText(null);
        jTextFieldBColunas.setText(null);
        jTextFieldBLinhas.setText(null);
        jTextAreaSaidaMA.setText(null);
        jTextAreaSaidaMB.setText(null);
        jTextAreaSaida.setText(null);
        jButtonSubtracao.setEnabled(false);
        jButtonMultiplicacao.setEnabled(false);
        jButtonAdicao.setEnabled(false);
        jButtonInversaB.setEnabled(false);
        jButtonMultiKB.setEnabled(false);
        jButtonPotenciaB.setEnabled(false);
        jButtonInversaA.setEnabled(false);
        jButtonMultiKA.setEnabled(false);
        jButtonPotenciaA.setEnabled(false);
        for (int linha = 0; linha < 8; linha++) {
            for (int coluna = 1; coluna < 3; coluna++) {
                model.setValueAt("", linha, coluna);
            }
        }
    }//GEN-LAST:event_jButtonResetActionPerformed

    private void jButtonInversaBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInversaBActionPerformed
        try {
            transposta(matB);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_jButtonInversaBActionPerformed

    private void jButtonInversaAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInversaAActionPerformed
        try {
            transposta(matA);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_jButtonInversaAActionPerformed

    private void jButtonPotenciaAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPotenciaAActionPerformed
        try {
            potencia(matA);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_jButtonPotenciaAActionPerformed

    private void jButtonMultiKAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMultiKAActionPerformed
        try {
            multiplicarK(matA);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_jButtonMultiKAActionPerformed

    private void jTextFieldALinhasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldALinhasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldALinhasActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaMatriz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaMatriz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaMatriz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaMatriz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaMatriz().setVisible(true);
            }
        });
    }
    public void adicionar() throws Exception{
        try{
        Matriz aux = matA.adicionar(matB);
        jTextAreaSaida.setText("ADICIONAR MATRIZ \"A\" + MATRIZ \"B\"\n" + aux.getMatriz());
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }
    public void subtrair() throws Exception{
        try{
        Matriz aux = matA.subtrair(matB);
        jTextAreaSaida.setText("SUBTRAIR MATRIZ \"A\" - MATRIZ \"B\"\n" + aux.getMatriz());
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }
    public void multiplicar() throws Exception{
        try{
            Matriz aux = matA.multiplicar(matB);
            jTextAreaSaida.setText("MULTIPLICAR MATRIZ \"A\" * MATRIZ \"B\"\n" + aux.getMatriz());
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }
    public void multiplicarK(Matriz conta) throws Exception{
        try{
            int constante = Integer.parseInt(JOptionPane.showInputDialog(rootPane, "Constante:"));//recebe a constante
            Matriz aux = conta.multiplicaPorK(constante);//cria matirz auxiliar que recebe a matriz A multiplicada por constante
            jTextAreaSaida.setText("MULTIPLICAR MATRIZ \"A\" * \"" + constante + "\"\n" + aux.getMatriz());//mostra na caixa principal a conta
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }
    public void potencia(Matriz conta) throws Exception{
        try{
            int expoente = Integer.parseInt(JOptionPane.showInputDialog(rootPane, "Expoente:"));
            Matriz aux = conta.calcularPotencia(expoente);
            jTextAreaSaida.setText("MATRIZ \"A\" ELEVADA À " + expoente + "ª POTÊNCIA\n" + aux.getMatriz());
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }
    public void transposta(Matriz conta) throws Exception{
        try{
            Matriz aux = conta.calcularTransposta();
            jTextAreaSaida.setText("TRANSPOSTA DE MATRIZ \"A\"\n" + aux.getMatriz());
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }
    public void matPrima() throws Exception{
        try{
            boolean aux = matA.eTiangularSuperior();
            if(aux) model.setValueAt("SIM", 0, 1);
            else model.setValueAt("NÃO", 0, 1);
            
            aux = matA.eTiangularInferior();
            if(aux) model.setValueAt("SIM", 1, 1);
            else model.setValueAt("NÃO", 1, 1);
            
            aux = matA.eSimetrica();
            if(aux) model.setValueAt("SIM", 2, 1);
            else model.setValueAt("NÃO", 2, 1);
            
            aux = matA.eIndentidade();
            if(aux) model.setValueAt("SIM", 3, 1);
            else model.setValueAt("NÃO", 3, 1);
            
            aux = matA.eOrtogonal();
            if(aux) model.setValueAt("SIM", 4, 1);
            else model.setValueAt("NÃO", 4, 1);
            
            aux = matA.ePermutacao();
            if(aux) model.setValueAt("SIM", 5, 1);
            else model.setValueAt("NÃO", 5, 1);
           
            if(!butaoB){
                aux = matA.eIgual(matB);
                if(aux) {
                    model.setValueAt("SIM", 6, 1);
                    model.setValueAt("SIM", 6, 2);
                }
                else {
                    model.setValueAt("NÃO", 6, 1);
                    model.setValueAt("NÃO", 6, 2);
                }

                aux = matA.eDiferente(matB);
                if(aux) {
                    model.setValueAt("SIM", 7, 1);
                    model.setValueAt("SIM", 7, 2);
                }
                else {
                    model.setValueAt("NÃO", 7, 1);
                    model.setValueAt("NÃO", 7, 2);
                }
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }
    public void matSec() throws Exception{
        try{
            boolean aux = matB.eTiangularSuperior();
            if(aux) model.setValueAt("SIM", 0, 2);
            else model.setValueAt("NÃO", 0, 2);
            
            aux = matB.eTiangularInferior();
            if(aux) model.setValueAt("SIM", 1, 2);
            else model.setValueAt("NÃO", 1, 2);
            
            aux = matB.eSimetrica();
            if(aux) model.setValueAt("SIM", 2, 2);
            else model.setValueAt("NÃO", 2, 2);
            
            aux = matB.eIndentidade();
            if(aux) model.setValueAt("SIM", 3, 2);
            else model.setValueAt("NÃO", 3, 2);
            
            aux = matB.eOrtogonal();
            if(aux) model.setValueAt("SIM", 4, 2);
            else model.setValueAt("NÃO", 4, 2);
            
            aux = matB.ePermutacao();
            if(aux) model.setValueAt("SIM", 5, 2);
            else model.setValueAt("NÃO", 5, 2);
            
            if(!butaoA){
                aux = matA.eIgual(matB);
                if(aux) {
                    model.setValueAt("SIM", 6, 1);
                    model.setValueAt("SIM", 6, 2);
                }
                else {
                    model.setValueAt("NÃO", 6, 1);
                    model.setValueAt("NÃO", 6, 2);
                }

                aux = matA.eDiferente(matB);
                if(aux) {
                    model.setValueAt("SIM", 7, 1);
                    model.setValueAt("SIM", 7, 2);
                }
                else {
                    model.setValueAt("NÃO", 7, 1);
                    model.setValueAt("NÃO", 7, 2);  
                }
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
        
    }
    public void butao(){
        if(!butaoA && !butaoB){
            jButtonSubtracao.setEnabled(true);
            jButtonMultiplicacao.setEnabled(true);
            jButtonAdicao.setEnabled(true);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdicao;
    private javax.swing.JButton jButtonCriarMatrizA;
    private javax.swing.JButton jButtonCriarMatrizB;
    private javax.swing.JButton jButtonInversaA;
    private javax.swing.JButton jButtonInversaB;
    private javax.swing.JButton jButtonMultiKA;
    private javax.swing.JButton jButtonMultiKB;
    private javax.swing.JButton jButtonMultiplicacao;
    private javax.swing.JButton jButtonPotenciaA;
    private javax.swing.JButton jButtonPotenciaB;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JButton jButtonSubtracao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTableResultado;
    private javax.swing.JTextArea jTextAreaSaida;
    private javax.swing.JTextArea jTextAreaSaidaMA;
    private javax.swing.JTextArea jTextAreaSaidaMB;
    private javax.swing.JTextField jTextFieldAColunas;
    private javax.swing.JTextField jTextFieldALinhas;
    private javax.swing.JTextField jTextFieldBColunas;
    private javax.swing.JTextField jTextFieldBLinhas;
    // End of variables declaration//GEN-END:variables
}
